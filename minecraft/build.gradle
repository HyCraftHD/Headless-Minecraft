plugins {
   id "java-library"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

jar {
}

configurations {
	minecraft
	compile.extendsFrom(minecraft)
}

// Setup project

// Imports
import net.minecraftforge.srgutils.IMappingFile
import net.minecraftforge.srgutils.IMappingFile.Format

// Download minecraft
javaexec { java ->
	classpath rootProject.buildscript.configurations.classpath
	main "net.hycrafthd.minecraft_downloader.Main"
	args "--version", minecraft_version, "--output", minecraft_files, "--skip-assets", "--extra-information", "--library-list", library_list
	workingDir minecraft_files
}.rethrowFailure().assertNormalExitValue()
	
// Generate tsrg files from official mappings
def mappingFile = IMappingFile.load(official_mappings_file)
mappingFile.write(obf_to_mapping.toPath(), Format.TSRG, true)
mappingFile.write(mapping_to_obf.toPath(), Format.TSRG, false)
	
// Remap the minecraft jar
javaexec { java ->
	classpath rootProject.buildscript.configurations.classpath
	main "net.md_5.specialsource.SpecialSource"
	args "--in-jar", minecraft_jar, "--out-jar", mapped_minecraft_jar, "--srg-in", obf_to_mapping
	workingDir minecraft_files
}.rethrowFailure().assertNormalExitValue()

dependencies {
	minecraft files(mapped_minecraft_jar)
	minecraft files(library_list.readLines())
}