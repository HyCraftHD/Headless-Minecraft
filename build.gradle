buildscript {
    repositories {
	    mavenCentral()
	    maven {
	    	url "https://files.minecraftforge.net/maven"
	    }
		maven {
			url "https://repo.u-team.info"
    	}
	}

    dependencies {
    	classpath "net.hycrafthd:minecraft_downloader:1.0.0-SNAPSHOT"
        classpath "net.minecraftforge:srgutils:0.4.1"
        classpath "net.md-5:SpecialSource:1.9.0"
    }
}

plugins {
    id "java-library"
    id "eclipse"
    id "com.palantir.launch-config" version "1.2.0"
}

def minecraft_version = "1.16.5"

// Setup project

// Imports
import net.minecraftforge.srgutils.IMappingFile
import net.minecraftforge.srgutils.IMappingFile.Format

// Directories
def minecraft_files = file("$buildDir/minecraft_files")
def minecraft_downloader = file("$buildDir/minecraft-downloader")
def mappings = file("$buildDir/mappings")
def mapped = file("$buildDir/mapped")

// Files
def official_mappings_file = project.file("${minecraft_files}/${minecraft_version}-client.txt")
def obf_to_mapping = project.file("${mappings}/obf_to_mapping.srg")
def mapping_to_obf = project.file("${mappings}/mapping_to_obf.srg")
def minecraftJar = project.file("${minecraft_files}/${minecraft_version}-client.jar")
def mappedMinecraftJar = project.file("${mapped}/mapped-minecraft.jar")
def libraryList = project.file("${minecraft_files}/libraries.txt")


// Create directories
minecraft_files.mkdirs()
minecraft_downloader.mkdirs()
mappings.mkdirs()
mapped.mkdirs()

// Download minecraft
task downloadMinecraft(type: JavaExec) {
	classpath buildscript.configurations.classpath
	main "net.hycrafthd.minecraft_downloader.Main"
	args "--version", minecraft_version, "--output", minecraft_files, "--skipAssets", "--extraInformation", "--libraryList", libraryList

	workingDir minecraft_downloader
}

// Generate tsrg files from official mappings
task generateTsrgFiles(dependsOn: downloadMinecraft) {
	doLast {
		IMappingFile file = IMappingFile.load(official_mappings_file)
		
		file.write(obf_to_mapping.toPath(), Format.TSRG, true)
		file.write(mapping_to_obf.toPath(), Format.TSRG, false)
	}
}

// Remap the minecraft jar
task remapMinecraftJar(type: JavaExec, dependsOn: generateTsrgFiles) {
	classpath buildscript.configurations.classpath
	main "net.md_5.specialsource.SpecialSource"
	args "--in-jar", minecraftJar, "--out-jar", mappedMinecraftJar, "--srg-in", obf_to_mapping
	workingDir mapped
}

// Add library dependencies
/*task libraryDependencies(dependsOn: remapMinecraftJar) {
	doLast {
		libraryList.eachLine { line ->
			println line
			
			dependencies.add("minecraft", files(line))
		}
	}
}*/

class MappedMinecraftDependency implements FileCollectionDependency, org.gradle.api.internal.artifacts.dependencies.SelfResolvingDependencyInternal {
	
	private FileCollection minecraftFiles
	
	MappedMinecraftDependency(minecraftFiles) {
		this.minecraftFiles = minecraftFiles
	}
	
	@Override
	ComponentIdentifier getTargetComponentId() {
		println "component target id sdfkdfjk"
		return null
	}
	
	@Override
	public FileCollection getFiles() {
		return minecraftFiles
	}
	
	@Override
	public Set<File> resolve() {
		println "RESOLVE FIL LESDFKJSDLZHF KLHDJSF LHSDFHSJKLDFHJKSD;JHDFKH"
		return minecraftFiles
	}
	
	@Override
	public Set<File> resolve(boolean transitive) {
		return resolve()
	}

	@Override
	public TaskDependency getBuildDependencies() {
		return minecraftFiles.getBuildDependencies()
	}

	@Override
	public String getGroup() {
		return "net.minecraft"
	}

	@Override
	public String getName() {
		return "mapped_minecraft_with_libraries"
	}

	@Override
	public String getVersion() {
		return "1.0.0"
	}
	
	@Override
	public boolean contentEquals(Dependency dependency) {
		return false
	}

	@Override
	public Dependency copy() {
		return new MappedMinecraftDependency()
	}

	@Override
	public String getReason() {
		return null;
	}

	@Override
	public void because(String reason) {
	}
}

// Default Project
repositories {
    mavenCentral()
    maven {
    	url "https://repo.u-team.info"
    }
}

configurations {
    minecraft
    implementation.extendsFrom minecraft
}

dependencies {
	//minecraft "com.mojang:minecraft:1.16.5"
	//implementation new MappedMinecraftDependency()
	
	minecraft new MappedMinecraftDependency(files(mappedMinecraftJar) {
	})
	
	/*minecraft files(mappedMinecraftJar) {
		builtBy "remapMinecraftJar"
	}*/	
}

group = "net.hycrafthd"
archivesBaseName = "headless_minecraft-" + minecraft_version
version = "1.0.0-SNAPSHOT"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
	withSourcesJar()
	withJavadocJar()
}

tasks.named("jar") {
	archiveClassifier = ""
	
	from "LICENSE"
		
	manifest {
		attributes(
			"Implementation-Version": project.version,
			"Implementation-Vendor": "HyCraftHD, Luc_ZZ",
	        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
	}
}