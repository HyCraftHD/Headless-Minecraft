plugins {
    id "java-library"
    id "eclipse"
    id "com.palantir.launch-config" version "1.2.0"
}

ext {
	minecraft_version = "1.16.5"
	
	// Directories
	minecraft_files = file("$buildDir/minecraft_files")
	minecraft_downloader = file("$buildDir/minecraft_downloader")
	mappings = file("$buildDir/mappings")
	mapped = file("$buildDir/mapped")
	
	// Files
	official_mappings_file = file("${minecraft_files}/${minecraft_version}-client.txt")
	obf_to_mapping = file("${mappings}/obf_to_mapping.srg")
	mapping_to_obf = file("${mappings}/mapping_to_obf.srg")
	minecraftJar = file("${minecraft_files}/${minecraft_version}-client.jar")
	mappedMinecraftJar = file("${mapped}/mapped-minecraft.jar")
	libraryList = file("${minecraft_files}/libraries.txt")
}

repositories {
	mavenCentral()
	maven {
		url "https://files.minecraftforge.net/maven"
	}
	maven {
		url "https://repo.u-team.info"
	}
}

configurations {
	headlessMinecraftImplementation
}

dependencies {
	headlessMinecraftImplementation project(":Headless-Minecraft-Implementation")
	api "net.hycrafthd:minecraft_downloader:1.0.0-SNAPSHOT"
	implementation ("org.spongepowered:mixin:0.8.2") {
		transitive = false
	}
	implementation ("cpw.mods:modlauncher:8.0.9") {
		transitive = false
	}
	implementation ("cpw.mods:grossjava9hacks:1.3.0") {
		transitive = false
	}
	implementation "org.ow2.asm:asm:9.0"
    implementation "org.ow2.asm:asm-commons:9.0"
    implementation "org.ow2.asm:asm-tree:9.0"
	implementation "org.ow2.asm:asm-analysis:9.0"
	implementation "org.ow2.asm:asm-util:9.0"
    implementation "com.google.guava:guava:21.0"
}

group = "net.hycrafthd"
archivesBaseName = "headless_minecraft-" + minecraft_version
version = "1.0.0-SNAPSHOT"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
	withSourcesJar()
	withJavadocJar()
}

tasks.named("jar") {
	archiveClassifier = ""
	
	from "LICENSE"
		
	manifest {
		attributes(
			"Implementation-Version": project.version,
			"Implementation-Vendor": "HyCraftHD, Luc_ZZ",
	        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
	}
}

task runHeadlessMinecraft(type: JavaExec) {
	def run = new File("$rootDir/run")
	if(!run.exists() ) {
		run.mkdirs()
	}

	main "net.hycrafthd.headless_minecraft.launcher.Main"
	args "--run", "\"$run\"", "--username", "xyz", "--password", "xyz"
	systemProperties = [
		"headless-minecraft.development": "true",
		"headless-minecraft.development.download": "\"$minecraft_files\"",
		"headless-minecraft.development.mapped-minecraft": "\"$mappedMinecraftJar\"",
		"headless-minecraft.development.implementation-build": "\"" + file(project(":Headless-Minecraft-Implementation").projectDir.toString() + "/bin/main") +"\"",
	]
	workingDir run
}